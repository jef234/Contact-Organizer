{"version":3,"sources":["logo.svg","Components/Contacts/Contact.js","Components/Contacts/Contacts.js","Components/Layout/TextInputGroup.js","Components/Contacts/AddContact.js","Components/Contacts/EditContact.js","Components/Layout/Header.js","Components/pages/About.js","Components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Contact","state","showContactInfo","onShowClick","e","setState","onDeleteClick","id","a","axios","delete","this","props","contact","name","email","phone","className","onClick","style","cursor","bind","float","color","to","fontSize","Component","protoType","PropTypes","object","isRequired","Contacts","contacts","Fragment","map","key","TextInputGroup","label","value","placeholder","type","onChange","error","onKeyUp","htmlFor","classnames","defaultProps","AddContact","errors","validate_keys","errName","errEmail","errPhone","errFlag","onSubmit","preventDefault","newContact","post","history","push","target","EditContact","match","params","put","get","res","data","Header","branding","width","src","logo","alt","data-toggle","data-target","aria-controls","aria-expanded","aria-label","prototype","string","About","NotFound","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.06055d4f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios'\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    }\r\n\r\n    onShowClick = e => {\r\n        this.setState({ showContactInfo: !this.state.showContactInfo })\r\n    }\r\n\r\n    onDeleteClick = async (id) => {\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n    }\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n\r\n        return (\r\n            <div className=\"card card-body mb-3\">\r\n                <h4>\r\n                    {name}&nbsp;\r\n                                <i onClick={this.onShowClick} className={showContactInfo ? \"fas fa-caret-square-up\" : \"far fa-caret-square-down\"} style={{ cursor: 'pointer' }} />\r\n                    <i onClick={this.onDeleteClick.bind(this, id)} className=\"fas fa-times\" style={{ cursor: 'pointer', float: 'right', color: 'red' }} />\r\n                    <Link to={`/Contacts/Edit/${id}`}><i className=\"fas fa-pencil-alt mr-3\" style={{ cursor: 'pointer', float: 'right', color: 'black', fontSize: '1.17rem' }} /></Link>\r\n                </h4>\r\n                {showContactInfo ?\r\n                    (<ul className=\"list-group\">\r\n                        <li className=\"list-group-item\">Email: {email}</li>\r\n                        <li className=\"list-group-item\">Phone: {phone}</li>\r\n                    </ul>)\r\n                    : null}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nContact.protoType = {\r\n    contact: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\n\r\nclass Contacts extends Component {\r\n\r\n    state = {\r\n        contacts: [\r\n            {\r\n                id: 1,\r\n                name: 'John Doe',\r\n                email: 'john@gmail.com',\r\n                phone: '555-555-5555'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Karen Williams',\r\n                email: 'karen@gmail.com',\r\n                phone: '444-444-4444'\r\n            },\r\n            {\r\n                id: 3,\r\n                name: 'Henry Johnson',\r\n                email: 'henry@gmail.com',\r\n                phone: '333-333-333'\r\n            }\r\n        ]\r\n    };\r\n\r\n    render() {\r\n        const { contacts } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <h1 className=\"display-4 mb-3\">\r\n                    <span className=\"text-danger\">Contacts</span> List\r\n                            </h1>\r\n                {contacts.map(contact => (\r\n                    <Contact\r\n                        key={contact.id}\r\n                        contact={contact}\r\n                    />\r\n                ))}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\nfunction TextInputGroup({\r\n    label, name, value, placeholder, type, onChange, error, onKeyUp\r\n}) {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input type={type} name={name} \r\n                className={classnames('form-control form-control-lg', {'is-invalid': error})}\r\n                placeholder={placeholder} value={value} onChange={onChange} onKeyUp={onKeyUp}/>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string,\r\n    onKeyUp: PropTypes.func.isRequired\r\n}\r\n\r\nTextInputGroup.defaultProps ={\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup\r\n\r\n","import React, { Component } from 'react'\r\nimport TextInputGroup from '../Layout/TextInputGroup'\r\nimport axios from 'axios'\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    validate_keys = () => {\r\n        const { name, email, phone } = this.state\r\n        let errName, errEmail, errPhone, errFlag = 0\r\n        if (name === '') { errName = 'Name is required'; errFlag = 1 }\r\n        if (email === '') { errEmail = 'Email is required'; errFlag = 1 }\r\n        if (phone === '') { errPhone = 'Phone is required'; errFlag = 1 }\r\n\r\n        this.setState({ errors: { name: errName, email: errEmail, phone: errPhone } })\r\n        return errFlag\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const { name, email, phone } = this.state\r\n\r\n        if (this.validate_keys() === 1) {\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const res = await axios.post(\"https://jsonplaceholder.typicode.com/users\", newContact)\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })\r\n\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value })\r\n    onKeyUp = e => this.validate_keys()\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state\r\n\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h1 className=\"display-4 mb-3 mt-2\" >\r\n                    <span className=\"text-danger\">Add</span> Contact\r\n                        </h1>\r\n                <div className=\"card mb-3\">\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <TextInputGroup\r\n                                label=\"Name\"\r\n                                name=\"name\"\r\n                                placeholder=\"Enter Name..\"\r\n                                value={name}\r\n                                onChange={this.onChange}\r\n                                error={errors.name}\r\n                                onKeyUp={this.onKeyUp}\r\n                            />\r\n                            <TextInputGroup\r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                placeholder=\"Enter Email..\"\r\n                                value={email}\r\n                                onChange={this.onChange}\r\n                                error={errors.email}\r\n                                onKeyUp={this.onKeyUp}\r\n                            />\r\n                            <TextInputGroup\r\n                                label=\"Phone\"\r\n                                name=\"phone\"\r\n                                placeholder=\"Enter Phone..\"\r\n                                value={phone}\r\n                                onChange={this.onChange}\r\n                                error={errors.phone}\r\n                                onKeyUp={this.onKeyUp}\r\n                            />\r\n                            <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact\r\n","import React, { Component } from 'react'\r\nimport TextInputGroup from '../Layout/TextInputGroup'\r\nimport axios from 'axios'\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    validate_keys = () => {\r\n        const { name, email, phone } = this.state\r\n        let errName, errEmail, errPhone, errFlag = 0\r\n        if (name === '') { errName = 'Name is required'; errFlag = 1 }\r\n        if (email === '') { errEmail = 'Email is required'; errFlag = 1 }\r\n        if (phone === '') { errPhone = 'Phone is required'; errFlag = 1 }\r\n\r\n        this.setState({ errors: { name: errName, email: errEmail, phone: errPhone } })\r\n        return errFlag\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n        const { name, email, phone } = res.data\r\n        this.setState({ name, email, phone })\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        if (this.validate_keys() === 1) {\r\n            return;\r\n        }\r\n\r\n        const { name, email, phone } = this.state\r\n        const newContact = { name, email, phone }\r\n\r\n        const { id } = this.props.match.params\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, newContact)\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })\r\n\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value })\r\n    onKeyUp = e => this.validate_keys()\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h1 className=\"display-4 mb-3 mt-2\" >\r\n                    <span className=\"text-danger\">Edit</span> Contact\r\n                        </h1>\r\n                <div className=\"card mb-3\">\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <TextInputGroup\r\n                                label=\"Name\"\r\n                                name=\"name\"\r\n                                placeholder=\"Enter Name..\"\r\n                                value={name}\r\n                                onChange={this.onChange}\r\n                                error={errors.name}\r\n                                onKeyUp={this.onKeyUp}\r\n                            />\r\n                            <TextInputGroup\r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                placeholder=\"Enter Email..\"\r\n                                value={email}\r\n                                onChange={this.onChange}\r\n                                error={errors.email}\r\n                                onKeyUp={this.onKeyUp}\r\n                            />\r\n                            <TextInputGroup\r\n                                label=\"Phone\"\r\n                                name=\"phone\"\r\n                                placeholder=\"Enter Phone..\"\r\n                                value={phone}\r\n                                onChange={this.onChange}\r\n                                error={errors.phone}\r\n                                onKeyUp={this.onKeyUp}\r\n                            />\r\n                            <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../../logo.svg';\r\n\r\nconst Header = (props) => {\r\n    let { branding } = props;\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-2\">\r\n            <div className=\"container\">\r\n                <img width=\"50\" className=\"text-danger\" src={logo} alt=\"React Logo\" />\r\n                <Link to=\"/\" className=\"navbar-brand\">\r\n                    {branding}\r\n                </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div id=\"navbarSupportedContent\" className=\"collapse navbar-collapse justify-content-end\">\r\n                    <ul className=\"navbar-nav\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\" >\r\n                                <i className=\"fas fa-home\" /> Home</Link>\r\n                        </ li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/Contacts/Add\" className=\"nav-link\" >\r\n                                <i className=\"fas fa-plus-square\" /> Add</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/About\" className=\"nav-link\" >\r\n                                <i className=\"fas fa-info-circle\" /> About</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: \"My App\"\r\n}\r\n\r\nHeader.prototype = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport default class About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"display-4 mb-3\"><span className=\"text-danger\">About</span> Contact Manager</h2>\r\n                <p className=\"lead\">Simple app to manage contacts</p>\r\n                <p className=\"text-secondary\">Developer : Jeffrey Rajkumar</p>\r\n                <p className=\"text-secondary\">Version : 1.0.0</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"display-4 mb-3\"><span className=\"text-danger\">404</span> Page Not Found</h2>\r\n                <p className=\"lead\">Sorry, that page does not exist</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport Contacts from './Components/Contacts/Contacts';\nimport AddContact from './Components/Contacts/AddContact';\nimport EditContact from './Components/Contacts/EditContact';\nimport Header from './Components/Layout/Header';\nimport About from './Components/pages/About';\nimport NotFound from './Components/pages/NotFound';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header branding=\"Contact Organizer\" />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\" component={Contacts} />\n            <Route exact path=\"/Contacts/Add\" component={AddContact} />\n            <Route exact path=\"/Contacts/Edit/:id\" component={EditContact} />\n            <Route exact path=\"/About\" component={About} />\n            <Route exact component={NotFound} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}